/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JPanel.java to edit this template
 */
package Interfaces.GestionProveedores;

import Manejadores.ManejadorGestionProveedores.ManejadorProveedor;
import java.sql.CallableStatement;
import java.sql.ResultSet;
import java.util.ArrayList;
import javax.swing.JOptionPane;
import javax.swing.JTable;
import javax.swing.table.DefaultTableModel;

public class PanelEliminarProveedores extends javax.swing.JPanel {

    private ManejadorProveedor DB;
    private int filasP;
    private DefaultTableModel dtmProveedor = new DefaultTableModel();

    /**
     * Creates new form PanelEliminarProveedores
     */
    public PanelEliminarProveedores() {
        DB = new ManejadorProveedor();
        initComponents();
        mostrarTabla(filasP, dtmProveedor, tablaProveedor, "proveedor");
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        lblEliminar = new javax.swing.JLabel();
        btnEliminarProveedor = new javax.swing.JButton();
        btnSalir = new javax.swing.JButton();
        jScrollPane3 = new javax.swing.JScrollPane();
        tablaProveedor = new javax.swing.JTable();

        lblEliminar.setText("ELIMINAR PROVEEDOR:");

        btnEliminarProveedor.setIcon(new javax.swing.ImageIcon(getClass().getResource("/img/eliminar.png"))); // NOI18N
        btnEliminarProveedor.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnEliminarProveedorActionPerformed(evt);
            }
        });

        btnSalir.setText("SALIR");

        tablaProveedor.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "ID", "NOMBRE", "TELEFONO", "EMPRESA"
            }
        ));
        jScrollPane3.setViewportView(tablaProveedor);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(lblEliminar)
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(btnEliminarProveedor, javax.swing.GroupLayout.DEFAULT_SIZE, 110, Short.MAX_VALUE)
                        .addGap(756, 756, 756))))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(btnSalir)
                    .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 677, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(29, 29, 29))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(138, 138, 138)
                        .addComponent(lblEliminar)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btnEliminarProveedor, javax.swing.GroupLayout.PREFERRED_SIZE, 49, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(107, 107, 107)
                        .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 442, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(18, 18, 18)
                .addComponent(btnSalir)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void btnEliminarProveedorActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnEliminarProveedorActionPerformed
        // TODO add your handling code here:
           String id=JOptionPane.showInputDialog(null,"Ingrese el ID del proveedor a Eliminar");
         int resultado = DB.borrarProveedor(id);
        if(resultado==1){
            JOptionPane.showMessageDialog(this, "Se elimino exitosamente");
            
            cargarDatos(filasP, dtmProveedor, "proveedor");
            
            
        }else{
            JOptionPane.showMessageDialog(this, "No se elimino");
        }
    }//GEN-LAST:event_btnEliminarProveedorActionPerformed

    public void mostrarTabla(int filasT, DefaultTableModel modeltabla, JTable Jtabla, String nombreTabla) {
        filasT = modeltabla.getRowCount();
        ArrayList<String> nombreCampos = new ArrayList<>();
        try {
            CallableStatement cts = DB.getDbConection().getConexion().prepareCall("SHOW COLUMNS FROM " + nombreTabla);
            ResultSet r = cts.executeQuery();
            while (r.next() == true) {
                nombreCampos.add(r.getString("Field"));
                System.out.println("" + r.getString("Field"));
            }
        } catch (Exception e) {
            e.printStackTrace();
        }
        for (int i = filasT - 1; i >= 0; i--) {
            modeltabla.removeRow(i);
        }
        for (String campo : nombreCampos) {
            modeltabla.addColumn(campo);
        }
        Jtabla.setModel(modeltabla);
        cargarDatos(filasT, modeltabla, nombreTabla);
    }

    public void cargarDatos(int filasE, DefaultTableModel modeltabla, String nombreTabla) {
        //INICIALIZAMOS UN TAMAÃ‘O DE COLUMNAS
        int tamanioColumnas = 0;
        try {
            //CONSULTA QUE NOS DICE CUANTAS COLUMNAS TIENE NUESTRA TABLA                                                                                                                                      //NOMBRE DE LA BASE DE DATOS
            CallableStatement cts = DB.getDbConection().getConexion().prepareCall("SELECT TABLE_NAME, count( COLUMN_NAME ) FROM INFORMATION_SCHEMA.COLUMNS WHERE table_name = '" + nombreTabla + "' AND table_schema = 'sql9556799';");
            ResultSet r = cts.executeQuery();
            while (r.next()) {
                //OBTENEMOS EL TOTAL DE COLUMNAS
                tamanioColumnas = r.getInt(2);
            }
        } catch (Exception e) {
            e.printStackTrace();
        }

        try {
            //REINICIAMOS LOS DATOS DE LA TABLA
            filasE = modeltabla.getRowCount();
            for (int i = filasE - 1; i >= 0; i--) {
                modeltabla.removeRow(i);
            }
            //CONSULTA CON LA QUE OBTENEMOS LOS DATOS DE LA TABLA
            CallableStatement cts = DB.getDbConection().getConexion().prepareCall("SELECT * FROM " + nombreTabla);
            ResultSet r = cts.executeQuery();

            //PROCESO DE ACCESO Y SUBIDA DE DATOS EN LA TABLA
            while (r.next()) {
                Object dato[] = new Object[tamanioColumnas];
                for (int i = 0; i < tamanioColumnas; i++) {
                    dato[i] = r.getString(i + 1);
                }
                modeltabla.addRow(dato);
            }
        } catch (Exception e) {
            e.printStackTrace();
        }
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnEliminarProveedor;
    private javax.swing.JButton btnSalir;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JLabel lblEliminar;
    private javax.swing.JTable tablaProveedor;
    // End of variables declaration//GEN-END:variables
}
