/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JPanel.java to edit this template
 */
package Interfaces.GestionProducto;

import Manejadores.ManejadorGestionProducto.ManejadorProducto;
import java.sql.CallableStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.util.ArrayList;
import javax.swing.JOptionPane;
import javax.swing.JTable;
import javax.swing.table.DefaultTableModel;

public class PanelModificar_VisualizarProductos extends javax.swing.JPanel {

    private ManejadorProducto DB;
    private DefaultTableModel dtmProductos = new DefaultTableModel();
    private int filasP;
    private ResultSet conjuntoInstalacion;
    
    
    public PanelModificar_VisualizarProductos() {
        DB = new ManejadorProducto();
        initComponents();
        mostrarTabla(filasP, dtmProductos, tablaProducto, "producto");
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel15 = new javax.swing.JLabel();
        btnBuscar = new javax.swing.JButton();
        txtID = new javax.swing.JTextField();
        jLabel18 = new javax.swing.JLabel();
        jLabel1 = new javax.swing.JLabel();
        jLabel16 = new javax.swing.JLabel();
        txtStockProducto = new javax.swing.JTextField();
        btnSalir = new javax.swing.JButton();
        jScrollPane3 = new javax.swing.JScrollPane();
        tablaProducto = new javax.swing.JTable();
        txtPrecioProducto = new javax.swing.JTextField();
        btnConfirmar = new javax.swing.JButton();
        btnModificar = new javax.swing.JButton();
        btnRefrescar = new javax.swing.JButton();
        txtNombreProducto1 = new javax.swing.JTextField();
        jLabel17 = new javax.swing.JLabel();

        jLabel15.setText("NOMBRE DEL PRODUCTO:");

        btnBuscar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/img/lupa.png"))); // NOI18N
        btnBuscar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnBuscarActionPerformed(evt);
            }
        });

        txtID.setEditable(false);

        jLabel18.setText("STOCK:");

        jLabel1.setText("GUARDAR CAMBIOS:");

        jLabel16.setText("PRECIO");

        btnSalir.setText("SALIR");

        tablaProducto.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "ID_PRODUCTO", "NOMBRE", "PRECIO", "STOCK", "ID_PROVEEDOR"
            }
        ));
        jScrollPane3.setViewportView(tablaProducto);

        btnConfirmar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/img/GuardarTodo.png"))); // NOI18N
        btnConfirmar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnConfirmarActionPerformed(evt);
            }
        });

        btnModificar.setText("MODIFICAR");
        btnModificar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnModificarActionPerformed(evt);
            }
        });

        btnRefrescar.setText("CARGAR DATOS");
        btnRefrescar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnRefrescarActionPerformed(evt);
            }
        });

        jLabel17.setText("ID:");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(193, 193, 193)
                .addComponent(btnBuscar, javax.swing.GroupLayout.PREFERRED_SIZE, 65, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(btnSalir, javax.swing.GroupLayout.PREFERRED_SIZE, 73, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                .addComponent(jLabel16)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(txtPrecioProducto, javax.swing.GroupLayout.PREFERRED_SIZE, 278, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(jLabel18)
                                        .addGap(31, 31, 31)
                                        .addComponent(txtStockProducto, javax.swing.GroupLayout.PREFERRED_SIZE, 269, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addGroup(layout.createSequentialGroup()
                                        .addGap(12, 12, 12)
                                        .addComponent(btnConfirmar, javax.swing.GroupLayout.PREFERRED_SIZE, 78, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                        .addGroup(layout.createSequentialGroup()
                                            .addComponent(btnRefrescar, javax.swing.GroupLayout.PREFERRED_SIZE, 143, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addGap(21, 21, 21))
                                        .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                                            .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 118, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addGap(47, 47, 47)
                                            .addComponent(btnModificar, javax.swing.GroupLayout.PREFERRED_SIZE, 107, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(jLabel17)
                                        .addGap(37, 37, 37)
                                        .addComponent(txtID, javax.swing.GroupLayout.PREFERRED_SIZE, 188, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(jLabel15)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                        .addComponent(txtNombreProducto1, javax.swing.GroupLayout.PREFERRED_SIZE, 188, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                .addGap(0, 0, Short.MAX_VALUE)))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 530, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(62, 62, 62))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(14, 14, 14)
                .addComponent(btnBuscar, javax.swing.GroupLayout.PREFERRED_SIZE, 44, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(8, 8, 8)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 364, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(btnSalir))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(45, 45, 45)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(txtID, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel17, javax.swing.GroupLayout.PREFERRED_SIZE, 14, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(23, 23, 23)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel15)
                            .addComponent(txtNombreProducto1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(txtPrecioProducto, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel16))
                        .addGap(29, 29, 29)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(txtStockProducto, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel18))
                        .addGap(26, 26, 26)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel1, javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(btnModificar, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(btnConfirmar, javax.swing.GroupLayout.PREFERRED_SIZE, 49, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(2, 2, 2)
                        .addComponent(btnRefrescar, javax.swing.GroupLayout.PREFERRED_SIZE, 59, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(23, Short.MAX_VALUE))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void btnConfirmarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnConfirmarActionPerformed
        // TODO add your handling code here:
          if(txtID.getText().isEmpty()||txtPrecioProducto.getText().isEmpty()||txtStockProducto.getText().isEmpty()){
            JOptionPane.showMessageDialog(null, "Ingrese todos los datos");
        }else{
            int resultado = DB.modificarProducto(txtNombreProducto1.getText(),txtPrecioProducto.getText(),txtStockProducto.getText()
                            ,txtID.getText() );
        if(resultado == 1){
            JOptionPane.showMessageDialog(this, "Se modifico el producto");
         txtID.setText("");
         txtPrecioProducto.setText("");
         txtStockProducto.setText("");

           cargarDDatos2();
           
        }else
            JOptionPane.showMessageDialog(this, "No se pudo modificar el producto");
        
        }
    }//GEN-LAST:event_btnConfirmarActionPerformed

    private void btnModificarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnModificarActionPerformed
        // TODO add your handling code here:
        
        btnConfirmar.setVisible(true);
        int renglon=tablaProducto.getSelectedRow();
        
        if(renglon==-1){
        
            JOptionPane.showMessageDialog(null,"Debe seleccionar el dato a eliminar","Error",
                    JOptionPane.ERROR_MESSAGE);
        }else{
            txtID.setText((String) tablaProducto.getValueAt(renglon, 0));
            txtNombreProducto1.setText((String) tablaProducto.getValueAt(renglon, 1));
            txtPrecioProducto.setText((String) tablaProducto.getValueAt(renglon, 2));
            txtStockProducto.setText((String)tablaProducto.getValueAt(renglon, 3));
    }//GEN-LAST:event_btnModificarActionPerformed
}
    private void btnBuscarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnBuscarActionPerformed
        // TODO add your handling code here:
             String varB;
       btnRefrescar.setVisible(true);
        
        do{
        
            varB=JOptionPane.showInputDialog(null,"Ingrese el ID del producto a buscar");
       
        if(varB.isEmpty())
            JOptionPane.showMessageDialog(null,"Error el campo está vacío ","Error",
                    JOptionPane.ERROR_MESSAGE);
            }while (varB.isEmpty());
        
        
        conjuntoInstalacion = DB.Buscarproducto(varB);
            filasP = dtmProductos.getRowCount();
            for(int i=filasP-1; i>=0;i--){
                dtmProductos.removeRow(i);
            }
        try{
            while(conjuntoInstalacion.next()){
                Object dato[] = new Object[5];
                for(int i=0; i<5;i++){
                    dato[0]=conjuntoInstalacion.getString("id");
                    dato[1]=conjuntoInstalacion.getString("descripcion");
                    dato[2]=conjuntoInstalacion.getString("precio");
                    dato[3]=conjuntoInstalacion.getString("stock");
                    dato[4]=conjuntoInstalacion.getString("idProveedor");

                }dtmProductos.addRow(dato);
               
            }
        }catch(SQLException e){
            e.printStackTrace();
        }
    }//GEN-LAST:event_btnBuscarActionPerformed

    private void btnRefrescarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnRefrescarActionPerformed
        // TODO add your handling code here:                                          
       cargarDDatos2();
       btnRefrescar.setVisible(false);
    }//GEN-LAST:event_btnRefrescarActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnBuscar;
    private javax.swing.JButton btnConfirmar;
    private javax.swing.JButton btnModificar;
    private javax.swing.JButton btnRefrescar;
    private javax.swing.JButton btnSalir;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel15;
    private javax.swing.JLabel jLabel16;
    private javax.swing.JLabel jLabel17;
    private javax.swing.JLabel jLabel18;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JTable tablaProducto;
    private javax.swing.JTextField txtID;
    private javax.swing.JTextField txtNombreProducto1;
    private javax.swing.JTextField txtPrecioProducto;
    private javax.swing.JTextField txtStockProducto;
    // End of variables declaration//GEN-END:variables

    public void mostrarTabla(int filasT,DefaultTableModel modeltabla,JTable Jtabla,String nombreTabla){
        filasT = modeltabla.getRowCount();
        ArrayList<String> nombreCampos = new ArrayList<>();
        try{
            CallableStatement cts = DB.getDbConection().getConexion().prepareCall("SHOW COLUMNS FROM "+nombreTabla);
            ResultSet r = cts.executeQuery();
            while(r.next()==true){
                nombreCampos.add(r.getString("Field"));
                System.out.println(""+r.getString("Field"));
            }
        }catch(Exception e){e.printStackTrace();}
        for(int i=filasT-1;i>=0;i--){modeltabla.removeRow(i);}
        for (String campo : nombreCampos) {modeltabla.addColumn(campo);}  
        Jtabla.setModel(modeltabla);
        cargarDatos(filasT,modeltabla,nombreTabla);
    }
    
    //actualizar datos o cargar datos
    public void cargarDatos(int filasE,DefaultTableModel modeltabla,String nombreTabla){
         int tamanioColumnas=0;
         try{                                                                                                                                     //NOMBRE DE LA BASE DE DATOS
            CallableStatement cts = DB.getDbConection().getConexion().prepareCall("SELECT TABLE_NAME, count( COLUMN_NAME ) FROM INFORMATION_SCHEMA.COLUMNS WHERE table_name = '"+nombreTabla+"' AND table_schema = 'sql9556799';");
            ResultSet r = cts.executeQuery();
            while(r.next()){tamanioColumnas = r.getInt(2);}
        }catch(Exception e){e.printStackTrace();}
        try{
            filasE=modeltabla.getRowCount();
            for(int i =filasE-1;i>=0;i--){ modeltabla.removeRow(i);}
            CallableStatement cts = DB.getDbConection().getConexion().prepareCall("SELECT * FROM "+nombreTabla);
            ResultSet r = cts.executeQuery();
            while(r.next()){
                Object dato[] = new Object[tamanioColumnas];
                for(int i=0; i < tamanioColumnas;i++){
                    dato[i]=r.getString(i+1);
                }
                modeltabla.addRow(dato);
            }
        }catch(Exception e){
            e.printStackTrace();
    }
    }
    
    public void cargarDDatos2(){
        
        try{
            filasP=dtmProductos.getRowCount();
            for(int i =filasP-1;i>=0;i--){
                dtmProductos.removeRow(i);
            }
            CallableStatement cts = DB.getDbConection().getConexion().prepareCall("SELECT*FROM producto");
            ResultSet r = cts.executeQuery();
            
            while(r.next()){
                Object dato[] = new Object[5];
                for(int i=0; i < 5;i++){
                    dato[i]=r.getString(i+1);
                }
                dtmProductos.addRow(dato);
            }
        }catch(Exception e){
            e.printStackTrace();
        }
    }
    
}
